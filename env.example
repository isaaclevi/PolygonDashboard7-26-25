# Stock Trading Dashboard - Environment Configuration
# Copy this file to .env and update with your actual values

# =============================================================================
# Polygon.io API Configuration
# =============================================================================
# Get your free API key from: https://polygon.io/
POLYGON_API_KEY=your_polygon_api_key_here

# =============================================================================
# Database Configuration (PostgreSQL)
# =============================================================================
DB_HOST=postgres
DB_PORT=5432
DB_USER=postgres
DB_PASSWORD=your_secure_password_here
DB_NAME=stock_data

# =============================================================================
# PGAdmin Configuration
# =============================================================================
PGADMIN_EMAIL=admin@admin.com
PGADMIN_PASSWORD=your_secure_pgadmin_password_here

# =============================================================================
# Socket Server Configuration
# =============================================================================
SOCKET_PORT=3001
FRONTEND_URL=http://localhost:4200

# =============================================================================
# HTTP Server Configuration
# =============================================================================
PORT=3001
HTTP_PROXY_PORT=3002

# =============================================================================
# Application Configuration
# =============================================================================
NODE_ENV=production
LOG_LEVEL=info

# =============================================================================
# Example Usage:
# =============================================================================
# 1. Copy this file: cp env.example .env
# 2. Edit .env with your actual values
# 3. Run with Docker: docker-compose up --build
# 4. Access dashboard: http://localhost:4200 (Angular)
# 5. Backend socket service: ws://localhost:3001/data-stream
# 6. Health monitoring: http://localhost:3002/health
#
# Frontend communicates via WebSocket for real-time data streaming
# Backend provides socket service and minimal health monitoring
# All data transmitted as JSON over WebSocket protocol 