# Stock Trading Dashboard - Environment Configuration
# Copy this file to .env and update with your actual values

# =============================================================================
# Polygon.io API Configuration
# =============================================================================
# Get your free API key from: https://polygon.io/
POLYGON_API_KEY=your_polygon_api_key_here

# =============================================================================
# Database Configuration (PostgreSQL)
# =============================================================================
DB_HOST=postgres
DB_PORT=5432
DB_USER=postgres
DB_PASSWORD=your_secure_password_here
DB_NAME=stock_data

# =============================================================================
# PGAdmin Configuration
# =============================================================================
PGADMIN_EMAIL=admin@admin.com
PGADMIN_PASSWORD=your_secure_pgadmin_password_here

# =============================================================================
# FTP Server Configuration
# =============================================================================
FTP_PORT=20
FTP_USER=admin
FTP_PASS=your_secure_ftp_password_here

# =============================================================================
# HTTP Server Configuration
# =============================================================================
PORT=3000
HTTP_PROXY_PORT=3000

# =============================================================================
# Application Configuration
# =============================================================================
NODE_ENV=production
LOG_LEVEL=info

# =============================================================================
# Example Usage:
# =============================================================================
# 1. Copy this file: cp env.example .env
# 2. Edit .env with your actual values
# 3. Run with Docker: docker-compose up --build
# 4. Access dashboard: http://localhost:3000
# 5. Direct FTP access: ftp://admin:password@localhost:20
#
# Frontend communicates via HTTP proxy for browser compatibility
# Backend provides both FTP server and HTTP proxy endpoints
# All data served as JSON files for consistency 